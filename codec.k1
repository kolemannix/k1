ability Codec {
  fn aConst(): u8
  fn write(self: Self): Buffer[u8]
  fn read(buffer: Buffer[u8]): Self
}

impl Codec for string {
  fn aConst(): u8 { 10 }
  fn write(self: string): Buffer[u8] {
    self.toBytes()
  }
  fn read(buffer: Buffer[u8]): string {
    string/fromBytes(buffer)
  }
}

fn main(): unit {
  let buf: Buffer[u8] = [104: u8, 101, 108, 108, 111].toBuffer();
  let x: string = Codec/read(buf);
  assert(x == "hello");
  assert("asdf" == Codec/read("asdf".write()));

  // Allow this syntax for 'selecting' an impl
  // Codec for [string]/read(buf);
  // Codec for [string]/aConst("sdf");

  ()
}
