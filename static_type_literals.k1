fn makeByteArray[N: static uword](): Array[N x uword] {
  // nocommit(0): Have to debug why #statics with a type hint register as
  //              'never' only in generic pass!
  let x = (#static "hi"): "hi";
  crash("unimplemented");
}

fn main(): i32 {

  let a: 1 = 1.toStatic();
  let a: 1 = 1.toStatic();
  let c: 'c' = 'c'.toStatic();
  let hello: "hello" = "hello".toStatic();

  let hello: "hello!" = #static {
    let* bytes = [104: u8];
    println("Hello, world!");
    bytes.push(101);
    bytes.push(108);
    bytes.push(108);
    bytes.push(111);
    bytes.push(33);
    string/wrapBytes(bytes.toBuffer())
  };

  let statStr: static string = #static "(?,?,?)";
  (statStr as string).splitByChar('?');

  0
}
