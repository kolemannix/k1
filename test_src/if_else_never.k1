fn singleNever(b: bool): int {
  val x: int = if not b {
    crash("Uh oh!")
  } else {
    0
  };
  val y: int = if b {
    0
  } else {
    crash("Uh oh!")
  };
  x + y
}

fn bothNever(b: bool): int {
  val x: int = if not b {
    crash("Uh oh!")
  } else {
    crash("Ahh!")
  }
}

fn main(): int {
  assert(singleNever(true) == 0);
  bothNever(false);
  0
}
//abortmsg: Uh oh! at if_else_never.k1:17
