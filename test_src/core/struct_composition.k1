ns struct_composition;

deftype Positioned = {
  x: int, y: int, width: int, height: int
}
deftype Text = _struct_combine[{ text: string }, Positioned]

deftype User = {
  name: string,
  password: string,
}

deftype UserView = _struct_remove[User, { password: string }]

fn test(): unit {
  let t: Text = { text: "Hello, Builder!", x: 0, y: 0, width: 0, height: 0 };
  assert(t is { text: "Hello, Builder!" });
  assert(t.x == 0);
  assert(t.y == 0);
  // assert(t is { x: 0, y: 0 });
  assert(t is { width: 0, height: 0 });

  assert(sizeOf[Text]() == 48);

  assert(sizeOf[UserView]() == sizeOf[{ name: string }]());
}
