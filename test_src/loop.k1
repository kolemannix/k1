fn loopBreak(): unit {
  let x: int = loop {
    let inner: int = if true {
      break(3)
    } else {
      4
    }
  };
  assert(x == 3)
}

fn loopNested(): unit {
  let result = loop {
    break(loop { break(10) })
  };
  assert(result == 10)
}

fn loopFalse(): unit {
  let x = loop {
    break(3);
  };
  assert(x == 3)
}

fn main(): int {
  loopBreak();
  loopNested();
  loopFalse();
  0
}
