ns ability_constraint {

  ability Num {
    fn num(self: Self): i32
  }
  
  fn add[T](a: T, b: T): i32 where T: Num, T: Show {
    a.show();
    b.show();
    a.num() + b.num()
  }
  
  impl Num for int {
    fn num(self: Self): i32 {
      self as i32
    }
  }
  
  fn test(): unit {
    assert(add(1, 2) == 3);
    ()
  }

}
