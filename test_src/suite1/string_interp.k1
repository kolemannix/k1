ns string_interp_test;

impl Print for { name: string, weight: int } {
  fn printTo[W: Writer](self: Self, w: W*): unit {
    let name = self.name;
    let weight = self.weight;
    w.writeString(self.name);
    w.writeString(": ");
    self.weight.printTo(w);
    ()
  }
}

fn testRawStrings(): unit {
  let s1 = `Hello,

  "world"`;
  assertEquals(s1, "Hello,\n\n  \"world\"")
}

fn test(): unit {
  let user = { name: "Bob", weight: 199 };
  assertEquals("Hello, '{user}'!", "Hello, 'Bob: 199'!");

  let p = { outer: { inner: true } };
  assertEquals("{not p.outer.inner}", "false");

  let withBraces = "{42.show()} + {20} = {({ value: 62}.value)}";
  assertEquals(withBraces, "42 + 20 = 62");

  let nested = "{"String has {10 + 10} in"} it";
  assertEquals(nested, "String has 20 in it");

  testRawStrings();
}
