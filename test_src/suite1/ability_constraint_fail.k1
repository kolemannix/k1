ns ability_constraint_fail;

ability Num {
  fn num(self: Self): i32
}

fn add[T](a: T, b: T): i32 where T: Num, T: Show {
  println(a.show());
  println("+");
  println(b.show());
  a.num() + b.num()
}

fn test(): unit {
  let result = testCompile(add("asdf", "asdf"));
  assertEquals(
    result,
    .Some("Invalid call to add. Could not satisfy ability constraint Num for given type T := string due to: No matching implementations found")
  )
}
