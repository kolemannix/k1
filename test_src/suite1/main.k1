fn low(): unit {
  println("testing 'low'");
  test_string_literal/test();
  arith/test();
  bool_test/test();
  char_test/test();
  assign/test();
  pointer/test();
  fib/test();
  float_test/test();
  pipe/test();
  lexical_scope/test();
  ability_fail/test();
  ability_constraint/test();
  ability_generic/test();
  ability_self_call/test();
  ability_constraint_fail/test();
  ability_01/test();
  bits_test/test();
  control_flow/test();
  enum_basic/test();
  function_pointer/test();
  ns_collision/test();
  enum_construction/test();
  scopes/test();
  while_test/test();
  use_test/test();
  type_order/test();
  opaque_type_01/test();
  test_comptime/test();
  test_globals/test();
}

fn moderate(): unit {
  println("testing 'moderate'");
  never_everywhere/test();
  ns_extend/test();
  optionals/test();
  type_info/test();
  all_out_of_order/test();
  try_test/test();
  match_exhaust/main();
  match_references/test();
  generic_struct/test();
  context_params/test();
  context_generic/test();
  inference/test();
  is_patterns/test();
  struct_anon_nomethod/test();
  struct_test/test();
  enum_fail/inner/test();
  match_fails/test();
  require_test/test();
  array_test/test();
  matching_if/test();
  lambdas/test();
  condcomp/test();
  struct_composition/test();
  zero_test/test();
  type_schema/test();
  array_type_test/test();
  ability_complex/test();
}

fn coreLib(): unit {
  println("testing 'core'");
  // core lib coverage
  for_yield_test/test();
  allocator_test/test();
  iterator_tests/test();
  buffer_test/test();
  string_test/test();
  list_test/test();
  range_test/test();
  string_interp_test/test();
  json_test/test();
  lib_compiler_test/test();
}

// Compiler Core test coverage, ideally increasing complexity
fn main(): i32 {
  // Low
  low();
  // #static low();

  // Moderate
  moderate();
  // #static moderate();

  static_parameter/test();
  static_run/test();

  test_meta/test();

  coreLib();
  // #static coreLib();

  println("All tests passed!");

  0
}
