ns struct_anon_nomethod;

deftype PointNamed = { x: int, y: int }
ns PointNamed {
  fn sum(self: PointNamed): int {
    self.x + self.y
  }
}

deftype alias PointAlias = { x: int, y: int }
ns PointAlias {
  fn sum(me: PointAlias): int {
    me.x + me.y
  }
}

fn test(): unit {
  // Should work because PointNamed is a proper type
  let p: PointNamed = { x: 0, y: 0 };
  p.sum();

  // Should not work because PointAlias is a type alias
  let p2: PointAlias = { x: 0, y: 0 };
  assertEquals(
    testCompile(p2.sum()),
    Opt.Some("Method 'sum' does not exist on type: '{ x: iword, y: iword }'")
  );

  ()
}
