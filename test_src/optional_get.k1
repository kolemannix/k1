deftype Point = { x: int, y: int? }

fn main(): int {
  let p: Point? = { x: 1, y: 2 };
  assert(p!.x == 1);
  assert(p!.y! == 2);

  let b = true: bool?;
  if b is .Some(x) {
    assert(x);
  };

  assertMsg("a", Opt::hasValue[bool](b));
  let c: int? = .None;
  assertMsg("b", not c.hasValue());

  assertMsg("c", types::typeId[Point.y.Some.value]() == types::typeId[int]());

  0
}
