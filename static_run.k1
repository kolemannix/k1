fn main(): int {

  // String creation (special case)
  #static "Hello, Static";

  // Struct creation
  let point = #static {
    ({ x: 1, y: 2 })
  };
  assert(point.x == 1);
  assert(point.y == 2);

  // Scalars
  assert(#static true);
  assert(not (#static false));
  assert(not (#static true == false));
  assert(#static () == ());
  assert(#static 'a' == 'a');
  assert(not #static 'A' == 'a');
  assert(not #static 123 == -123);
  assert(not #static 123.0 == 3.14);

  // Variable assign
  let goodbye: string = #static {
    let mut msg = "Hello, World";
    msg = "Goodbye, World!";
    msg
  };
  println(goodbye);

  let letAssign = #static {
    let mut i = 22;
    i = 10;
    i
  };
  assertEquals(letAssign, 10);
  
  let padded = #static {
    let padded = { a: 1: u8, b: 2: u8, c: 3: u8, d: 4: u64, e: 5 };
    padded
  };
  assertEquals(padded.a, 1);
  assertEquals(padded.b, 2);
  assertEquals(padded.c, 3);
  assertEquals(padded.d, 4);
  assertEquals(padded.e, 5);

  let letRef = #static {
    let* i = 10;
    assertEquals(i.*, 10);
    i <- 20;
    i.*
  };

  let sSwitch = #static switch letRef {
    _ -> (),
  };

  assertEquals(letRef, 20);

  // #static {
  //   let b: u8* = new(10);
  // };

  0
}
