let globalInt: int = 0;
let* globalIntRef: int* = 10;
let const comptimeInt: int = 2;

fn _main(): int {
   //#if k1/RUNTIME k1_init();

   assert(globalInt == 0);
   assert(comptimeInt == 2);

   while globalIntRef.* > comptimeInt {
     globalIntRef <- globalIntRef.* - 1;
   };
   assert(globalIntRef.* == 2);
 
   let mut i = 0;

   // Why is the arena slower than malloc!! :'(
   let* a = Arena/new(id = "temp", initialMb = 100);

   // Struct in a loop causes it too!
   // Not an arena problem thanks god
   let x = { a: 1, b: 2 };
   while i < 1000000 {
     // let p = libc/calloc(1, 8) as int*;
     // let p = libc/malloc(8) as int*;
     // p <- 423;
     //libc/free(p as Pointer);
     //a.push(123);
     // a.pushRaw(16, 8);
     let x = { a: 1, b: 2 };
     a.push(x);
     i = i + 1;
   };

  0
}
