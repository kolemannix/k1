deftype Ordering = either Less, Equal, Greater

ability Ordered {
  fn compare(self: Self, other: Self): Ordering
}

impl Ordered for int {
  fn compare(self: int, other: int): Ordering {
    if self == other .Equal
    else if self > other .Greater
    else .Less
  }
}

fn sorted[T](input: Array[T]): Array[T] where T: Ordered {
  let* sorted = Array::withCapacity(input.len);
}


fn main(): int {
  println("Hello, AOC!");
  let input = "3   4\n4   3\n2   5\n1   3\n3   9\n3   3";
  let input = Files::readToString("/Users/knix/dev/k1/dogfood/aoc/2024/day1.txt");
  let* left = Array::new[int]();
  let* right = Array::new[int]();
  for line in input.splitByChar('\n') do {
    let l = line.substring(0, 5);
    let r = line.substring(8, 13);
    left.push(l);
    right.push(r);
    println("\{l} \{r}");
  };
  0
}
