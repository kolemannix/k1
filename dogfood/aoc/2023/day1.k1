fn day2(): int {
  let input: string = Files/readToString("/Users/knix/dev/k1/dogfood/aoc/2023/1.txt");
  let lines = input.splitByChar('\n');
  let lineDigits = for line in lines yield {
    let* digits: List[i64]* = [];
    for c in line do {
      let thisDigit: ?i64 = if c.toAsciiDigit() is .Some(d) {
        .Some(d as i64)
      } else {
        let rest = line.substring(itIndex, line.len);
        if rest.startsWith("one")   1    else 
        if rest.startsWith("two")   2    else 
        if rest.startsWith("three") 3    else 
        if rest.startsWith("four")  4    else 
        if rest.startsWith("five")  5    else 
        if rest.startsWith("six")   6    else 
        if rest.startsWith("seven") 7    else 
        if rest.startsWith("eight") 8    else 
        if rest.startsWith("nine")  9    else 
        if rest.startsWith("zero")  0    else 
        .None
      };
      if thisDigit is .Some(d) {
        digits.push(d);
      }
    };
    *digits
  };
  let mut sum = 0;
  for lineDigits do {
    if it.first() is .Some(fst) {
      if it.last() is .Some(lst) {
        let two_digit = fst * 10 + lst;
        sum = sum + two_digit;
      };
    };
  };
  println("sum is {sum}");
  sum
}

fn main(): i32 {
  let input: string = Files/readToString("/Users/knix/dev/k1/dogfood/aoc/2023/1.txt");
  print("The file was ");
  printUInt(input.len);
  println(" characters long");
  let* digits: List[List[int]]* = [];
  let mut line: u64 = 0;
  let mut first = true;
  for c in input do {
    if c == '\n' {
      line = line + 1;
      first = true;
    };
    if c.toAsciiDigit() is .Some(i) {
      if first {
        digits.push([i as int]);
        first = false;
      } else {
        digits.getRef(line).push(i as int);
      };
    };
  };
  let mut sum = 0;
  for *digits do {
    if it.first() is .Some(fst) {
      if it.last() is .Some(lst) {
        let two_digit = fst * 10 + lst;
        sum = sum + two_digit;
      };
    };
  };
  println("sum is {sum}");

  day2();
  0
}
