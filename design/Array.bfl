
Array<int>
Slice<int, 4>
Dict<K,V>
// I think regular parameterized types, with named
// type parameters
Dict<key = int, value = String>

// Jakt has both [T] and Array[T]
// TS has both T[] and Array<T>
// I think its not worth it
fn sort<T>(x: let mut Array<T>): () fails String {

}


fn main(): i32 {
  let leet: Array<int> = [1, 3, 3, 7];
  leet[3]
}
